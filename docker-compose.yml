version: "3"
services:

  db:
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_SSL_REQUIRE: ${POSTGRES_SSL_REQUIRE}
      POSTGRES_SSL_REJECTUNAUTH: ${POSTGRES_SSL_REJECTUNAUTH}
    ports:
      - 5433:${POSTGRES_PORT}
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  redis:
    image: "redis:latest"
    container_name: "my-redis"
    ports:
      - "6399:6399"
    networks:
      - app_network

  # Your Node.js application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  redis:
    driver: local
